# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Fix for "Command PhaseScriptExecution failed" error
    target.build_configurations.each do |config|
      # Xcode 15+ 호환성
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # ✅ ARM64 아키텍처 명시적 설정 (iPhone 실행 가능)
      config.build_settings['ARCHS'] = 'arm64'
      
      # Apple Silicon Mac에서만 시뮬레이터용 arm64 제외
      # 실제 디바이스에서는 arm64 필수!
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386'
      
      # ✅ 빌드 활성 아키텍처만 사용 (디버그용)
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
      
      # Code signing 이슈 해결
      config.build_settings['CODE_SIGN_IDENTITY'] = ''
      
      # Bitcode 비활성화 (Xcode 14+에서 deprecated)
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # ✅ Valid Architectures 설정
      config.build_settings['VALID_ARCHS'] = 'arm64 arm64e'
      
      # ✅ Deprecated API 경고를 오류로 처리하지 않음
      config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
      config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
      config.build_settings['GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS'] = 'NO'
      config.build_settings['CLANG_WARN_DEPRECATED'] = 'NO'
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      
      # ✅ sqlite3 경고 무시 (매크로 충돌 해결)
      if target.name == 'sqlite3'
        config.build_settings['GCC_WARN_AMBIGUOUS_MACRO'] = 'NO'
        config.build_settings['GCC_WARN_64_TO_32_BIT_CONVERSION'] = 'NO'
        config.build_settings['CLANG_WARN_COMMA'] = 'NO'
        config.build_settings['CLANG_ANALYZER_DEADCODE_DEADSTORES'] = 'NO'
      end
      
      # ✅ audio 관련 패키지 경고 무시 (deprecated API)
      if ['audio_session', 'audioplayers_darwin', 'just_audio'].include?(target.name)
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      end
    end
  end
end
